{"version":3,"sources":["App.js","actions/Global/Global.actions.js","reducers/Global/Global.reducer.js","actions/Global/Global.constants.js","reducers/index.js","store.js","index.js"],"names":["App","ACTION_TYPES","initialState","view","appReducer","combineReducers","global","state","action","type","rootReducer","undefined","store","middlewares","reduxPromise","reduxThunk","enhancer","compose","applyMiddleware","createStore","reducers","configureStore","ReactDOM","render","document","getElementById","registerServiceWorker"],"mappings":"mMAOeA,MALf,WAEE,OAAO,6BAAK,UADE,U,sECHHC,EACI,cCEXC,EAAe,CACjBC,KCHW,aCETC,EAAaC,YAAgB,CAC/BC,OFGW,WAAyC,IAA/BC,EAAK,uDAAGL,EAAcM,EAAM,uCACjD,OAAQA,EAAOC,MACX,KAAKR,EACD,IAAQE,EAASK,EAATL,KACR,OAAO,2BACAI,GAAK,IACRJ,KAAMA,IAGd,QACI,OAAOI,MEFJG,EARK,SAACH,EAAOC,GAKxB,MAJoB,oBAAhBA,EAAOC,OACPF,OAAQI,GAGLP,EAAWG,EAAOC,ICYdI,EAlBQ,WAAwB,IAAvBV,EAAY,uDAAG,GAC7BW,EAAc,CAACC,IAAcC,KAMnC,IAAMC,EAAWC,YACbC,IAAe,aACRL,IAIX,OAAOM,YAAYC,EAAUlB,EAAcc,GAGjCK,CAAe,I,MCZ7BC,IAASC,OACL,kBAAC,IAAQ,CAACX,MAAOA,GACb,kBAAC,EAAG,OAEVY,SAASC,eAAe,SAE1BC,gB","file":"static/js/main.d0debfde.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction App() {\r\n  const value = 'World';\r\n  return <div>Hellod {value}</div>;\r\n}\r\n\r\nexport default App;\r\n","export const ACTION_TYPES = {\r\n    CHANGE_VIEW: 'CHANGE_VIEW',\r\n    GLOBAL_CHANGE_VIEW_STATUS: 'GLOBAL_CHANGE_VIEW_STATUS'\r\n};\r\n\r\nexport const changeView = (view) => {\r\n    return {\r\n        type: ACTION_TYPES.CHANGE_VIEW,\r\n        view\r\n    }\r\n}\r\nexport const changeViewStatus = (viewStatus) => {\r\n    return {\r\n        type: ACTION_TYPES.GLOBAL_CHANGE_VIEW_STATUS,\r\n        viewStatus\r\n    }\r\n}","import { ACTION_TYPES } from '../../actions/Global/Global.actions';\r\nimport { VIEWS } from '../../actions/Global/Global.constants';\r\n\r\nconst initialState = {\r\n    view: VIEWS.companies,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.CHANGE_VIEW: {\r\n            const { view } = action;\r\n            return {\r\n                ...state,\r\n                view: view\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const VIEWS = {\r\n    companies: \"companies\"\r\n};","import { combineReducers } from 'redux';\r\nimport Global from './Global/Global.reducer';\r\n\r\nconst appReducer = combineReducers({\r\n    global: Global\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === 'RESET_USER_INFO') {\r\n        state = undefined;\r\n    }\r\n\r\n    return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromise from 'redux-promise';\r\nimport logger from 'redux-logger';\r\nimport reducers from './reducers';\r\n\r\nconst configureStore = (initialState = {}) => {\r\n    const middlewares = [reduxPromise, reduxThunk];\r\n\r\n    if (process.env.NODE_ENV === `development`) {       \r\n        middlewares.push(logger);\r\n    }\r\n\r\n    const enhancer = compose(\r\n        applyMiddleware(\r\n            ...middlewares\r\n        )\r\n    );\r\n    \r\n    return createStore(reducers, initialState, enhancer)\r\n};\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;","//import '@babel/polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport registerServiceWorker from 'react-service-worker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}